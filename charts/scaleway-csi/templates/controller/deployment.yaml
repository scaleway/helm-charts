{{- if .Values.controller.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "scaleway-csi.fullname" . }}-controller
  labels:
    {{- include "scaleway-csi.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "scaleway-csi.selectorLabels" . | nindent 6 }}
      app: {{ include "scaleway-csi.fullname" . }}-controller
  replicas: {{ .Values.controller.replicaCount}}
  template:
    metadata:
      annotations:
        checksum/webhook-secret: {{ include (print $.Template.BasePath "/controller/validatingwebhookconfiguration.yaml") . | sha256sum }}
      {{- with .Values.controller.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "scaleway-csi.selectorLabels" . | nindent 8 }}
        app: {{ include "scaleway-csi.fullname" . }}-controller
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      priorityClassName: system-cluster-critical
      serviceAccount: {{ include "scaleway-csi.serviceAccountName" . }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.migration.enabled }}
      initContainers:
        - name: migration
          image: "{{ .Values.controller.migration.image.repository }}:{{ .Values.controller.migration.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.migration.image.pullPolicy }}
          command: ["/sbs-migration"]
          envFrom:
            - secretRef:
              {{- if .Values.controller.scaleway.existingSecretName }}
                name: {{ .Values.controller.scaleway.existingSecretName }}
              {{- else }}
                name: {{ include "scaleway-csi.fullname" . }}-secret
              {{- end }}
          resources:
            {{- toYaml .Values.controller.migration.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: scaleway-csi-plugin
          image: "{{ .Values.controller.driver.image.repository }}:{{ .Values.controller.driver.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.driver.image.pullPolicy }}
          args :
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--mode=controller"
            - "--v=4"
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          envFrom:
            - secretRef:
              {{- if .Values.controller.scaleway.existingSecretName }}
                name: {{ .Values.controller.scaleway.existingSecretName }}
              {{- else }}
                name: {{ include "scaleway-csi.fullname" . }}-secret
              {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
            {{- toYaml .Values.controller.driver.resources | nindent 12 }}
          {{- if .Values.controller.liveness.enabled }}
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
            failureThreshold: 5
          {{- end }}
        {{- if .Values.controller.provisioner.enabled }}
        - name: csi-provisioner
          image: "{{ .Values.controller.provisioner.image.repository }}:{{ .Values.controller.provisioner.image.tag }}"
          imagePullPolicy: {{ .Values.controller.provisioner.image.pullPolicy }}
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--leader-election"
            - "--feature-gates=Topology=true"
            - "--default-fstype={{ .Values.controller.provisioner.defaultFSType }}"
          env:
            - name: CSI_ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            {{- toYaml .Values.controller.provisioner.resources | nindent 12 }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        {{- end }}
        {{- if .Values.controller.attacher.enabled }}
        - name: csi-attacher
          image: "{{ .Values.controller.attacher.image.repository }}:{{ .Values.controller.attacher.image.tag }}"
          imagePullPolicy: {{ .Values.controller.attacher.image.pullPolicy }}
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--leader-election"
          env:
            - name: CSI_ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            {{- toYaml .Values.controller.attacher.resources | nindent 12 }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        {{- end }}
        {{- if .Values.controller.snapshotter.enabled }}
        - name: csi-snapshotter
          image: "{{ .Values.controller.snapshotter.image.repository }}:{{ .Values.controller.snapshotter.image.tag }}"
          imagePullPolicy: {{ .Values.controller.snapshotter.image.pullPolicy }}
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--leader-election"
          env:
            - name: CSI_ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            {{- toYaml .Values.controller.snapshotter.resources | nindent 12 }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        {{- end }}
        {{- if .Values.controller.snapshotController.enabled }}
        - name: snapshot-controller
          image: "{{ .Values.controller.snapshotController.image.repository }}:{{ .Values.controller.snapshotController.image.tag }}"
          imagePullPolicy: {{ .Values.controller.snapshotController.image.pullPolicy }}
          args:
            - "--v=5"
            - "--leader-election"
          resources:
            {{- toYaml .Values.controller.snapshotController.resources | nindent 12 }}
        {{- end }}
        {{- if .Values.controller.resizer.enabled }}
        - name: csi-resizer
          image: "{{ .Values.controller.resizer.image.repository }}:{{ .Values.controller.resizer.image.tag }}"
          imagePullPolicy: {{ .Values.controller.resizer.image.pullPolicy }}
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--leader-election"
          env:
            - name: CSI_ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            {{- toYaml .Values.controller.resizer.resources | nindent 12 }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        {{- end }}
        {{- if .Values.controller.liveness.enabled }}
        - name: liveness-probe
          image: "{{ .Values.controller.liveness.image.repository }}:{{ .Values.controller.liveness.image.tag }}"
          imagePullPolicy: {{ .Values.controller.liveness.image.pullPolicy }}
          args:
            - "--csi-address=$(CSI_ADDRESS)"
          env:
            - name: CSI_ADDRESS
              value: /csi/csi.sock
          resources:
            {{- toYaml .Values.controller.liveness.resources | nindent 12 }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        {{- end }}
        {{- if .Values.controller.webhook.enabled }}
        - name: snapshot-validation
          image: "{{ .Values.controller.webhook.image.repository }}:{{ .Values.controller.webhook.image.tag }}"
          imagePullPolicy: {{ .Values.controller.liveness.image.pullPolicy }}
          args: ['--tls-cert-file=/etc/snapshot-validation-webhook/certs/tls.crt', '--tls-private-key-file=/etc/snapshot-validation-webhook/certs/tls.key']
          ports:
          - containerPort: 443
          resources:
            {{- toYaml .Values.controller.webhook.resources | nindent 12 }}
          volumeMounts:
            - name: snapshot-validation-webhook-certs
              mountPath: /etc/snapshot-validation-webhook/certs
              readOnly: true
        {{- end }}
      volumes:
        - name: socket-dir
          emptyDir: {}
        {{- if .Values.controller.webhook.enabled }}
        - name: snapshot-validation-webhook-certs
          secret:
            secretName: {{ include "scaleway-csi.fullname" . }}-webhook
        {{- end }}
{{- end }}
